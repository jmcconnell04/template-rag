# example.env
# Copy this file to .env and customize for your workspace instance.

# --- General Workspace Settings ---
# A unique name for this workspace instance. Used for naming Docker volumes and containers.
WORKSPACE_NAME=my_rag_workspace_v1

# --- Server Configuration ---
# Host port on your machine that will map to the server's container port (8000).
# If running multiple workspaces locally, ensure this port is unique for each.
RAG_API_HOST_PORT=8000

# --- Other Service Configurations (will be added in later steps) ---
OPENWEBUI_HOST_PORT=3000
OLLAMA_BASE_URL=http://ollama:11434
DEFAULT_OLLAMA_MODELS_TO_PULL='["devstral:latest","gemma:latest","another/model:tag"]'
# GEMINI_API_KEY=<Your Gemini API Key Here>
# OPENAI_API_KEY=<Your OpenAI API Key Here>
# AUTO_SEED_ON_STARTUP=true

# --- Database Configuration ---
# DB_TYPE: Choose your database type.
# Options: "sqlite" (default), "postgres", "sqlserver"
# If using "postgres" or "sqlserver", ensure the corresponding service is defined
# in docker-compose.yml (and uncommented/profile enabled) and fill in connection details.
DB_TYPE=sqlite

# --- SQLite Configuration (if DB_TYPE=sqlite) ---
# SQLITE_DB_FILE_NAME: Name of the SQLite database file.
# Stored in ./rag_files/metadata_db/ on the host, mapped to /app/database/ in server container.
SQLITE_DB_FILE_NAME=app_data.db

# --- PostgreSQL Configuration (if DB_TYPE=postgres) ---
# These are for connecting to the 'postgres_db' service defined in docker-compose.yml.
POSTGRES_HOST=postgres_db
POSTGRES_PORT=5432
POSTGRES_USER=rag_user         # Changed to snake_case for consistency
POSTGRES_PASSWORD=rag_password   # Changed to snake_case
POSTGRES_DB=ragdb_${WORKSPACE_NAME} # Example: ragdb_rag_poc

# --- SQL Server Configuration (if DB_TYPE=sqlserver) ---
# These are for connecting to the 'sqlserver_db' service defined in docker-compose.yml.
SQLSERVER_HOST=sqlserver_db
SQLSERVER_PORT=1433
SQLSERVER_USER=sa
SQLSERVER_SA_PASSWORD=YourStrongPassword123! # IMPORTANT: Change this in your .env file!
SQLSERVER_DB_NAME=ragdb_${WORKSPACE_NAME}    # Example: ragdb_rag_poc
# For SQL Server with pyodbc, the correct ODBC driver name is crucial and depends on the
# driver installed in the 'server' Docker image. This might be auto-detected by SQLAlchemy
# if only one is present, or you might need to specify it if multiple are installed or detection fails.
# Example (usually not needed if only one standard driver is in the image):
# SQLSERVER_ODBC_DRIVER='ODBC Driver 18 for SQL Server'


#secrets
#WEBUI_ADMIN_USER_EMAIL=<Your Email Here>
#WEBUI_ADMIN_USER_PASSWORD=<Your Password Here>